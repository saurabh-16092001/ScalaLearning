[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Wissen\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Wissen\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 11.0.19)
[debug]       Load.loadUnit: plugins took 120.1205ms
[debug]       Load.loadUnit: defsScala took 0.3344ms
[debug] [Loading] Scanning directory C:\Users\Wissen\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Wissen\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.8931 ms
[debug]           Load.resolveProject(global-plugins) took 65.544ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Wissen\.sbt\1.0\plugins, plugins: List(<none>))) took 118.5412ms
[debug] [Loading] Done in C:\Users\Wissen\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 146.3603ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2724ms
[debug]     Load.loadUnit(file:/C:/Users/Wissen/.sbt/1.0/plugins/, ...) took 276.984ms
[debug]   Load.apply: load took 518.3741ms
[debug]   Load.apply: resolveProjects took 10.5251ms
[debug]   Load.apply: finalTransforms took 89.3805ms
[debug]   Load.apply: config.delegates took 13.6732ms
[debug]   Load.apply: Def.make(settings)... took 486.4697ms
[debug]   Load.apply: structureIndex took 102.4716ms
[debug]   Load.apply: mkStreams took 1.7565ms
[info] loading global plugins from C:\Users\Wissen\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6747.3366ms
[debug]           Load.loadUnit: plugins took 27.1739ms
[debug]           Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory D:\Learnings\Scala\Udemy-Scala-Beginners\project
[debug]             Load.loadUnit: mkEval took 7.7414ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Learnings\Scala\Udemy-Scala-Beginners\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1454 ms
[info] loading settings for project udemy-scala-beginners-build from idea.sbt ...
[debug]               Load.resolveProject(udemy-scala-beginners-build) took 2.4544ms
[debug]             Load.loadTransitive: finalizeProject(Project(id udemy-scala-beginners-build, base: D:\Learnings\Scala\Udemy-Scala-Beginners\project, plugins: List(<none>))) took 3.9919ms
[debug] [Loading] Done in D:\Learnings\Scala\Udemy-Scala-Beginners\project, returning: (udemy-scala-beginners-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2057.3213ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.6924ms
[debug]         Load.loadUnit(file:/D:/Learnings/Scala/Udemy-Scala-Beginners/project/, ...) took 2088.9434ms
[debug]       Load.apply: load took 2090.3704ms
[debug]       Load.apply: resolveProjects took 0.1519ms
[debug]       Load.apply: finalTransforms took 10.4689ms
[debug]       Load.apply: config.delegates took 0.3292ms
[debug]       Load.apply: Def.make(settings)... took 85.5939ms
[debug]       Load.apply: structureIndex took 24.073ms
[debug]       Load.apply: mkStreams took 0.0048ms
[info] loading project definition from D:\Learnings\Scala\Udemy-Scala-Beginners\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 7551.8298ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory D:\Learnings\Scala\Udemy-Scala-Beginners
[debug]       Load.loadUnit: mkEval took 0.2451ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.7393 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 46.6645ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Learnings\Scala\Udemy-Scala-Beginners, plugins: List(<none>))) took 51.6791ms
[debug] [Loading] Done in D:\Learnings\Scala\Udemy-Scala-Beginners, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1215.3228ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.2359ms
[debug]   Load.loadUnit(file:/D:/Learnings/Scala/Udemy-Scala-Beginners/, ...) took 8774.2716ms
[debug] Load.apply: load took 8776.0859ms
[debug] Load.apply: resolveProjects took 0.1822ms
[debug] Load.apply: finalTransforms took 28.3852ms
[debug] Load.apply: config.delegates took 0.465ms
[debug] Load.apply: Def.make(settings)... took 85.2152ms
[debug] Load.apply: structureIndex took 25.3875ms
[debug] Load.apply: mkStreams took 0.0045ms
[info] set current project to Udemy-Scala-Beginners (in build file:/D:/Learnings/Scala/Udemy-Scala-Beginners/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49511 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49511, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Udemy-Scala-Beginners (in build file:/D:/Learnings/Scala/Udemy-Scala-Beginners/)
[debug] > Exec(idea-shell, None, None)
